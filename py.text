from flask import Flask, render_template, request, redirect, send_from_directory
import sqlite3
import os

# Inisialisasi aplikasi Flask
app = Flask(__name__, template_folder=os.path.dirname(os.path.abspath(__file__)))

# Fungsi untuk menginisialisasi database
def init_db():
    conn = sqlite3.connect('finance.db')
    c = conn.cursor()

    # Membuat tabel User jika belum ada
    c.execute('''CREATE TABLE IF NOT EXISTS User (
                    user_id INTEGER PRIMARY KEY AUTOINCREMENT,
                    username TEXT NOT NULL,
                    password TEXT NOT NULL)''')

    # Membuat tabel Transactions jika belum ada
    c.execute('''CREATE TABLE IF NOT EXISTS Transactions (
                    transaction_id INTEGER PRIMARY KEY AUTOINCREMENT,
                    user_id INTEGER,
                    type TEXT NOT NULL,
                    amount REAL NOT NULL,
                    date TEXT NOT NULL,
                    note TEXT,
                    FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)''')

    conn.commit()
    conn.close()

# Rute untuk halaman utama (HTML)
@app.route('/')
def index():
    conn = sqlite3.connect('finance.db')
    c = conn.cursor()
    c.execute("SELECT * FROM Transactions")
    transactions = c.fetchall()
    conn.close()
    return render_template('index.html', transactions=transactions)

# Rute untuk menambahkan transaksi
@app.route('/add', methods=['POST'])
def add_transaction():
    transaction_type = request.form['type']
    amount = request.form['amount']
    date = request.form['date']
    note = request.form['note']

    conn = sqlite3.connect('finance.db')
    c = conn.cursor()
    c.execute("INSERT INTO Transactions (type, amount, date, note) VALUES (?, ?, ?, ?)",
              (transaction_type, amount, date, note))
    conn.commit()
    conn.close()
    return redirect('/')

# Rute untuk menghapus transaksi
@app.route('/delete/<int:transaction_id>', methods=['POST'])
def delete_transaction(transaction_id):
    conn = sqlite3.connect('finance.db')
    c = conn.cursor()
    c.execute("DELETE FROM Transactions WHERE transaction_id = ?", (transaction_id,))
    conn.commit()
    conn.close()
    return redirect('/')

# Rute untuk mereset transaksi
@app.route('/reset', methods=['POST'])
def reset_transactions():
    conn = sqlite3.connect('finance.db')
    c = conn.cursor()
    c.execute("DELETE FROM Transactions")
    c.execute("DELETE FROM sqlite_sequence WHERE name='Transactions'")
    conn.commit()
    conn.close()
    return redirect('/')

# Rute untuk melayani file CSS
@app.route('/styles.css')
def serve_css():
    return send_from_directory(os.path.dirname(os.path.abspath(__file__)), 'styles.css')

# Jalankan aplikasi
if __name__ == '__main__':
    init_db()
    app.run(debug=True)